import t from"@react-native-async-storage/async-storage";import a from"@react-native-community/netinfo";var e,r=(t,a)=>{try{if(t)return JSON.parse(t)}catch(t){}return a},c=({dataKey:c="graphcache-data",metadataKey:n="graphcache-metadata",maxAge:i=7}={})=>{var s=Math.floor((new Date).valueOf()/864e5),y={};return{readData:async()=>{if(!Object.keys(y).length){var a=null;try{a=await t.getItem(c)}catch(t){}var e=r(a,{});Object.assign(y,e)}var n=!1;if(Object.keys(y).forEach((t=>{s-Number(t)>i&&(n=!0,delete y[t])})),n)try{await t.setItem(c,JSON.stringify(y))}catch(t){}return Object.assign({},...Object.keys(y).map((t=>y[t])))},writeData:async a=>{if(!Object.keys(y).length){var e=null;try{e=await t.getItem(c)}catch(t){}var n=r(e,{});Object.assign(y,n)}var i={};for(var m in Object.keys(a).forEach((t=>{void 0===a[t]&&(i[t]=void 0)})),y)y[m]=Object.assign(y[m],i);y[s]=Object.assign(y[s]||{},a);try{await t.setItem(c,JSON.stringify(y))}catch(t){}},writeMetadata:async a=>{try{await t.setItem(n,JSON.stringify(a))}catch(t){}},readMetadata:async()=>{var a=null;try{a=await t.getItem(n)}catch(t){}return r(a,[])},onOnline:t=>{e&&(e(),e=void 0),e=a.addEventListener((({isConnected:a})=>{a&&t()}))},clear:async()=>{try{y={},await t.removeItem(c),await t.removeItem(n)}catch(t){}}}};export{c as makeAsyncStorage};
//# sourceMappingURL=urql-storage-rn.min.mjs.map
