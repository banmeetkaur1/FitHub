{"version":3,"file":"urql-storage-rn.mjs","sources":["../src/makeAsyncStorage.ts"],"sourcesContent":["import type { StorageAdapter } from '@urql/exchange-graphcache';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport NetInfo from '@react-native-community/netinfo';\n\nexport interface StorageOptions {\n  /** Name of the `AsyncStorage` key that’s used for persisted data.\n   * @defaultValue `'graphcache-data'`\n   */\n  dataKey?: string;\n  /** Name of the `AsyncStorage` key that’s used for persisted metadata.\n   * @defaultValue `'graphcache-metadata'`\n   */\n  metadataKey?: string;\n  /** Maximum age of cache entries (in days) after which data is discarded.\n   * @defaultValue `7` days\n   */\n  maxAge?: number;\n}\n\nconst parseData = (persistedData: any, fallback: any) => {\n  try {\n    if (persistedData) {\n      return JSON.parse(persistedData);\n    }\n  } catch (_err) {}\n\n  return fallback;\n};\n\nlet disconnect;\n\n/** React Native storage adapter persisting to `AsyncStorage`. */\nexport interface DefaultAsyncStorage extends StorageAdapter {\n  /** Clears the entire `AsyncStorage`. */\n  clear(): Promise<any>;\n}\n\n/** Creates a {@link StorageAdapter} which uses React Native’s `AsyncStorage`.\n *\n * @param opts - A {@link StorageOptions} configuration object.\n * @returns the created {@link DefaultAsyncStorage} adapter.\n *\n * @remarks\n * `makeAsyncStorage` creates a storage adapter for React Native,\n * which persisted to `AsyncStorage` via the `@react-native-async-storage/async-storage`\n * package.\n *\n * Note: We have no data on stability of this storage and our Offline Support\n * for large APIs or longterm use. Proceed with caution.\n */\nexport const makeAsyncStorage: (\n  ops?: StorageOptions\n) => DefaultAsyncStorage = ({\n  dataKey = 'graphcache-data',\n  metadataKey = 'graphcache-metadata',\n  maxAge = 7,\n} = {}) => {\n  const todayDayStamp = Math.floor(\n    new Date().valueOf() / (1000 * 60 * 60 * 24)\n  );\n  let allData = {};\n\n  return {\n    readData: async () => {\n      if (!Object.keys(allData).length) {\n        let persistedData: string | null = null;\n        try {\n          persistedData = await AsyncStorage.getItem(dataKey);\n        } catch (_err) {}\n        const parsed = parseData(persistedData, {});\n\n        Object.assign(allData, parsed);\n      }\n\n      // clean up old data\n      let syncNeeded = false;\n      Object.keys(allData).forEach(dayStamp => {\n        if (todayDayStamp - Number(dayStamp) > maxAge) {\n          syncNeeded = true;\n          delete allData[dayStamp];\n        }\n      });\n\n      if (syncNeeded) {\n        try {\n          await AsyncStorage.setItem(dataKey, JSON.stringify(allData));\n        } catch (_err) {}\n      }\n\n      return Object.assign(\n        {},\n        ...Object.keys(allData).map(key => allData[key])\n      );\n    },\n\n    writeData: async delta => {\n      if (!Object.keys(allData).length) {\n        let persistedData: string | null = null;\n        try {\n          persistedData = await AsyncStorage.getItem(dataKey);\n        } catch (_err) {}\n        const parsed = parseData(persistedData, {});\n        Object.assign(allData, parsed);\n      }\n\n      const deletedKeys = {};\n      Object.keys(delta).forEach(key => {\n        if (delta[key] === undefined) {\n          deletedKeys[key] = undefined;\n        }\n      });\n\n      for (const key in allData) {\n        allData[key] = Object.assign(allData[key], deletedKeys);\n      }\n\n      allData[todayDayStamp] = Object.assign(\n        allData[todayDayStamp] || {},\n        delta\n      );\n\n      try {\n        await AsyncStorage.setItem(dataKey, JSON.stringify(allData));\n      } catch (_err) {}\n    },\n\n    writeMetadata: async data => {\n      try {\n        await AsyncStorage.setItem(metadataKey, JSON.stringify(data));\n      } catch (_err) {}\n    },\n\n    readMetadata: async () => {\n      let persistedData: string | null = null;\n      try {\n        persistedData = await AsyncStorage.getItem(metadataKey);\n      } catch (_err) {}\n      return parseData(persistedData, []);\n    },\n\n    onOnline: cb => {\n      if (disconnect) {\n        disconnect();\n        disconnect = undefined;\n      }\n\n      disconnect = NetInfo.addEventListener(({ isConnected }) => {\n        if (isConnected) {\n          cb();\n        }\n      });\n    },\n\n    clear: async () => {\n      try {\n        allData = {};\n        await AsyncStorage.removeItem(dataKey);\n        await AsyncStorage.removeItem(metadataKey);\n      } catch (_err) {}\n    },\n  };\n};\n"],"names":["parseData","persistedData","fallback","JSON","parse","_err","disconnect","makeAsyncStorage","dataKey","metadataKey","maxAge","todayDayStamp","Math","floor","Date","valueOf","allData","readData","async","Object","keys","length","AsyncStorage","getItem","parsed","assign","syncNeeded","forEach","dayStamp","Number","setItem","stringify","map","key","writeData","deletedKeys","delta","undefined","writeMetadata","data","readMetadata","onOnline","cb","NetInfo","addEventListener","isConnected","clear","removeItem"],"mappings":";;;;AAmBA,IAAMA,YAAYA,CAACC,GAAoBC;EACrC;IACE,IAAID;MACF,OAAOE,KAAKC,MAAMH;;AAEtB,IAAE,OAAOI,IAAO;EAEhB,OAAOH;AAAQ;;AAGjB,IAAII;;AAqBG,IAAMC,mBAEcA,EACzBC,aAAU,mBACVC,iBAAc,uBACdC,YAAS,KACP;EACF,IAAMC,IAAgBC,KAAKC,OACzB,IAAIC,MAAOC,YAAS;EAEtB,IAAIC,IAAU,CAAA;EAEd,OAAO;IACLC,UAAUC;MACR,KAAKC,OAAOC,KAAKJ,GAASK,QAAQ;QAChC,IAAIpB,IAA+B;QACnC;UACEA,UAAsBqB,EAAaC,QAAQf;AAC7C,UAAE,OAAOH,IAAO;QAChB,IAAMmB,IAASxB,UAAUC,GAAe,CAAE;QAE1CkB,OAAOM,OAAOT,GAASQ;AACzB;MAGA,IAAIE,KAAa;MACjBP,OAAOC,KAAKJ,GAASW,SAAQC;QAC3B,IAAIjB,IAAgBkB,OAAOD,KAAYlB,GAAQ;UAC7CgB,KAAa;iBACNV,EAAQY;AACjB;AAAA;MAGF,IAAIF;QACF;gBACQJ,EAAaQ,QAAQtB,GAASL,KAAK4B,UAAUf;AACrD,UAAE,OAAOX,IAAO;;MAGlB,OAAOc,OAAOM,OACZ,OACGN,OAAOC,KAAKJ,GAASgB,KAAIC,KAAOjB,EAAQiB;AAC5C;IAGHC,WAAWhB;MACT,KAAKC,OAAOC,KAAKJ,GAASK,QAAQ;QAChC,IAAIpB,IAA+B;QACnC;UACEA,UAAsBqB,EAAaC,QAAQf;AAC7C,UAAE,OAAOH,IAAO;QAChB,IAAMmB,IAASxB,UAAUC,GAAe,CAAE;QAC1CkB,OAAOM,OAAOT,GAASQ;AACzB;MAEA,IAAMW,IAAc,CAAA;MACpBhB,OAAOC,KAAKgB,GAAOT,SAAQM;QACzB,SAAmBI,MAAfD,EAAMH;UACRE,EAAYF,UAAOI;;AACrB;MAGF,KAAK,IAAMJ,KAAOjB;QAChBA,EAAQiB,KAAOd,OAAOM,OAAOT,EAAQiB,IAAME;;MAG7CnB,EAAQL,KAAiBQ,OAAOM,OAC9BT,EAAQL,MAAkB,IAC1ByB;MAGF;cACQd,EAAaQ,QAAQtB,GAASL,KAAK4B,UAAUf;AACrD,QAAE,OAAOX,IAAO;AAAA;IAGlBiC,eAAepB;MACb;cACQI,EAAaQ,QAAQrB,GAAaN,KAAK4B,UAAUQ;AACzD,QAAE,OAAOlC,IAAO;AAAA;IAGlBmC,cAActB;MACZ,IAAIjB,IAA+B;MACnC;QACEA,UAAsBqB,EAAaC,QAAQd;AAC7C,QAAE,OAAOJ,IAAO;MAChB,OAAOL,UAAUC,GAAe;AAAG;IAGrCwC,UAAUC;MACR,IAAIpC,GAAY;QACdA;QACAA,SAAa+B;AACf;MAEA/B,IAAaqC,EAAQC,kBAAiB,EAAGC;QACvC,IAAIA;UACFH;;AACF;AACA;IAGJI,OAAO5B;MACL;QACEF,IAAU,CAAA;cACJM,EAAayB,WAAWvC;cACxBc,EAAayB,WAAWtC;AAChC,QAAE,OAAOJ,IAAO;AAAA;;AAEnB;;"}